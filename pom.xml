<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>scf.api.auto</groupId>
	<artifactId>api-auto-case</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<name>Service</name>
	<description>Service MS generated by archetype ${archetype.name} version ${archetype.version}</description>
	<packaging>jar</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-dependencies</artifactId>
		<version>2.3.6.RELEASE</version>
	</parent>
	<properties>
		<archetype.name>ademma-rest-connector-archetype</archetype.name>
		<archetype.version>0.1.1</archetype.version>
		<start-class>com.santander.connector.service.ServiceApplication</start-class>
<!-- 		<java.version>1.8</java.version> -->
		<java.version>11</java.version>
		<resource.delimiter>@</resource.delimiter>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
		<swagger.version>2.9.2</swagger.version>
		<spring-cloud.version>Hoxton.SR9</spring-cloud.version>
		<resilience4j.version>1.7.0</resilience4j.version>
		<skipTests>false</skipTests>
		<skipITs>${skipTests}</skipITs>
		<skipUTs>${skipTests}</skipUTs>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.springframework.hateoas</groupId> -->
			<!-- <artifactId>spring-hateoas</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-metrics</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-all</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.santander.serenity.devstack</groupId> -->
		<!-- <artifactId>serenity-devstack-security-autoconfigure-jwt-propagation</artifactId> -->
		<!-- <version>4.5.2</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.santander.serenity.devstack</groupId> -->
		<!-- <artifactId>serenity-devstack-security-autoconfigure-jwt-validation</artifactId> -->
		<!-- <version>4.5.2</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.santander.ademma</groupId>
			<artifactId>ademma-common-utilities</artifactId>
			<version>0.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.santander.ademma</groupId>
			<artifactId>ademma-msfinder-interface</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.santander.ademma</groupId>
			<artifactId>ademma-msfinder-interface</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.santander.ademma</groupId>
			<artifactId>ademma-msfinder-properties-impl</artifactId>
			<version>0.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.santander.ademma</groupId>
			<artifactId>ademma-sync-internal-caller</artifactId>
			<version>0.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jaxb</groupId>
		    <artifactId>jaxb-runtime</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 		   <groupId>com.fasterxml.jackson.core</groupId> -->
<!-- 		   <artifactId>jackson-databind</artifactId> -->
<!-- 		   <version>2.13.1</version> -->
<!-- 		</dependency> -->
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 		    <groupId>com.fasterxml.jackson.core</groupId> -->
<!-- 		    <artifactId>jackson-core</artifactId> -->
<!-- 		    <version>2.13.1</version> -->
<!-- 		</dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.hibernate</groupId> -->
		<!-- <artifactId>hibernate-validator</artifactId> -->
		<!-- <version>6.1.0.Final</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-dynatrace</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application*.yml</include>
					<include>**/application*.yaml</include>
					<include>**/application*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/application*.yaml</exclude>
					<exclude>**/application*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<finalName>${project.artifactId}-${project.version}-fat</finalName>
<!-- 		<pluginManagement> -->
			<plugins>
								<!-- tag::wsdl[] -->
				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>0.14.0</version>
					<executions>
						<execution>
							<id>xjc-gqs</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<schemaLanguage>WSDL</schemaLanguage>
								<generatePackage>com.santander.gqs.client</generatePackage>
								<schemas>
									<schema>
										<url>https://ficresfrontcert.scftest.santanderconsumer.es/GQS/GQS.asmx?WSDL</url>
									</schema>
								</schemas>
							</configuration>
						</execution>
					</executions>
				</plugin>
<!-- 				<plugin> -->
<!-- 					<groupId>io.swagger</groupId> -->
<!-- 					<artifactId>swagger-codegen-maven-plugin</artifactId> -->
<!-- 					<version>2.3.1</version> -->
<!-- 					<executions> -->
<!-- 						<execution> -->
<!-- 							<goals> -->
<!-- 								<goal>generate</goal> -->
<!-- 							</goals> -->
<!-- 							<configuration> -->
<!-- 								<inputSpec>${project.basedir}/src/main/resources/CalculatorSCF-0.0.1-swagger.yaml</inputSpec> -->
<!-- 								<language>spring</language> -->
<!-- 								<configOptions> -->
<!-- 									<sourceFolder>src/main/java/com/santander/connector/schema</sourceFolder> -->
<!-- 								</configOptions> -->
<!-- 							</configuration> -->
<!-- 						</execution> -->
<!-- 					</executions> -->
<!-- 				</plugin> -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>repackage</id>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>1.18.16</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok-mapstruct-binding</artifactId>
								<version>0.2.0</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${org.mapstruct.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>

				<!-- Unit test configuration -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!-- <version>2.22.0</version> -->
					<dependencies>
						<dependency>
							<groupId>org.junit.platform</groupId>
							<artifactId>junit-platform-surefire-provider</artifactId>
							<version>1.2.0</version>
						</dependency>
					</dependencies>
					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<skipTests>${skipUTs}</skipTests>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<exclude>**/*IntegrationTest.*</exclude>
						</excludes>

					</configuration>
				</plugin>

				<!-- Integration test configuration -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<!-- <version>3.0.0-M5</version> -->
					<dependencies>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-engine</artifactId>
							<version>${junit-jupiter.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<!-- Ensures that both integration-test and verify goals of the Failsafe 
							Maven plugin are executed. -->

						<execution>
							<id>run-integration-tests</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<classpathDependencyExcludes>
							<classpathDependencyExcludes>${groupId}:${artifactId}</classpathDependencyExcludes>
						</classpathDependencyExcludes>
						<additionalClasspathElements>
							<additionalClasspathElement>${project.build.outputDirectory}</additionalClasspathElement>
						</additionalClasspathElements>
						<!-- Sets the VM argument line used when integration tests are run. -->
						<argLine>${failsafeArgLine}</argLine>
						<skipTests>${skipTests}</skipTests>
						<skipITs>${skipITs}</skipITs>
						<excludes>
							<exclude>**/*UnitTest.*</exclude>
						</excludes>
						<includes>
							<include>**/*IntegrationTest.*</include>
						</includes>
					</configuration>
				</plugin>

				<!-- JaCoCo Coverage Test configuration -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.4</version>
					<executions>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which 
							is passed as VM argument when Maven the Surefire plugin is executed. -->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for unit tests is created 
							after unit tests have been run. -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>failsafeArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for integration tests after 
							integration tests have been run. -->
						<execution>
							<id>post-integration-test</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				

			</plugins>
<!-- 		</pluginManagement> -->
	</build>

</project>
